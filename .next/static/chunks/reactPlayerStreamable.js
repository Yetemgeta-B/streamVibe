"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["reactPlayerStreamable"],{

/***/ "(app-pages-browser)/./node_modules/react-player/lazy/players/Streamable.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-player/lazy/players/Streamable.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toESM = (mod, isNodeMode, target)=>(target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(// If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n        value: mod,\n        enumerable: true\n    }) : target, mod));\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\nvar __publicField = (obj, key, value)=>{\n    __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n    return value;\n};\nvar Streamable_exports = {};\n__export(Streamable_exports, {\n    default: ()=>Streamable\n});\nmodule.exports = __toCommonJS(Streamable_exports);\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nvar import_utils = __webpack_require__(/*! ../utils */ \"(app-pages-browser)/./node_modules/react-player/lazy/utils.js\");\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(app-pages-browser)/./node_modules/react-player/lazy/patterns.js\");\nconst SDK_URL = \"https://cdn.embed.ly/player-0.1.0.min.js\";\nconst SDK_GLOBAL = \"playerjs\";\nclass Streamable extends import_react.Component {\n    componentDidMount() {\n        this.props.onMount && this.props.onMount(this);\n    }\n    load(url) {\n        (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((playerjs)=>{\n            if (!this.iframe) return;\n            this.player = new playerjs.Player(this.iframe);\n            this.player.setLoop(this.props.loop);\n            this.player.on(\"ready\", this.props.onReady);\n            this.player.on(\"play\", this.props.onPlay);\n            this.player.on(\"pause\", this.props.onPause);\n            this.player.on(\"seeked\", this.props.onSeek);\n            this.player.on(\"ended\", this.props.onEnded);\n            this.player.on(\"error\", this.props.onError);\n            this.player.on(\"timeupdate\", (param)=>{\n                let { duration, seconds } = param;\n                this.duration = duration;\n                this.currentTime = seconds;\n            });\n            this.player.on(\"buffered\", (param)=>{\n                let { percent } = param;\n                if (this.duration) {\n                    this.secondsLoaded = this.duration * percent;\n                }\n            });\n            if (this.props.muted) {\n                this.player.mute();\n            }\n        }, this.props.onError);\n    }\n    play() {\n        this.callPlayer(\"play\");\n    }\n    pause() {\n        this.callPlayer(\"pause\");\n    }\n    stop() {}\n    seekTo(seconds) {\n        let keepPlaying = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        this.callPlayer(\"setCurrentTime\", seconds);\n        if (!keepPlaying) {\n            this.pause();\n        }\n    }\n    setVolume(fraction) {\n        this.callPlayer(\"setVolume\", fraction * 100);\n    }\n    setLoop(loop) {\n        this.callPlayer(\"setLoop\", loop);\n    }\n    getDuration() {\n        return this.duration;\n    }\n    getCurrentTime() {\n        return this.currentTime;\n    }\n    getSecondsLoaded() {\n        return this.secondsLoaded;\n    }\n    render() {\n        const id = this.props.url.match(import_patterns.MATCH_URL_STREAMABLE)[1];\n        const style = {\n            width: \"100%\",\n            height: \"100%\"\n        };\n        return /* @__PURE__ */ import_react.default.createElement(\"iframe\", {\n            ref: this.ref,\n            src: \"https://streamable.com/o/\".concat(id),\n            frameBorder: \"0\",\n            scrolling: \"no\",\n            style,\n            allow: \"encrypted-media; autoplay; fullscreen;\"\n        });\n    }\n    constructor(){\n        super(...arguments);\n        __publicField(this, \"callPlayer\", import_utils.callPlayer);\n        __publicField(this, \"duration\", null);\n        __publicField(this, \"currentTime\", null);\n        __publicField(this, \"secondsLoaded\", null);\n        __publicField(this, \"mute\", ()=>{\n            this.callPlayer(\"mute\");\n        });\n        __publicField(this, \"unmute\", ()=>{\n            this.callPlayer(\"unmute\");\n        });\n        __publicField(this, \"ref\", (iframe)=>{\n            this.iframe = iframe;\n        });\n    }\n}\n__publicField(Streamable, \"displayName\", \"Streamable\");\n__publicField(Streamable, \"canPlay\", import_patterns.canPlay.streamable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-player/lazy/players/Streamable.js\n"));

/***/ })

}]);